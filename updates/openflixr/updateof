#!/bin/bash
exec 1> >(tee -a /var/log/updateof.log) 2>&1
TODAY=$(date)
echo "-----------------------------------------------------"
echo "Date:	     $TODAY"
echo "-----------------------------------------------------"

THISUSER=$(whoami)
    if [ $THISUSER != 'root' ]
        then
            echo 'You must use sudo to run this script, sorry!'
            exit  1
    fi

## Pip Apps
echo ""
echo "Home-Assistant:"
pip3 install --upgrade homeassistant
echo ""
echo "Mopidy-Mopify:"
pip2 install --upgrade Mopidy
echo ""
echo "Mopidy-Mopify:"
pip2 install --upgrade Mopidy-Mopify
echo ""
echo "Mopidy-Moped:"
pip2 install --upgrade Mopidy-Moped
echo ""
echo "Mopidy-Spotmop:"
pip2 install --upgrade Mopidy-Spotmop
echo ""
echo "pafy:"
pip2 install --upgrade pafy
echo ""
echo "Mopidy-WebSettings"
pip2 install --upgrade Mopidy-WebSettings

## Create Download dirs when mounted to a network share
cd /opt/openflixr
echo ""
echo "create download dirs:"
sudo bash createdirs

## Git Apps
echo ""
echo "OpenFLIXR Wizard Update:"
cd /usr/share/nginx/html/setup
git reset --hard
git pull
echo ""
echo "CouchPotato:"
cd /opt/CouchPotato
git pull
/usr/sbin/service couchpotato restart
echo ""
echo "Headphones:"
cd /opt/headphones
git pull
/usr/sbin/service headphones restart
echo ""
echo "HTPC Manager:"
cd /opt/HTPCManager
git pull
/usr/sbin/service htpcmanager stop
sleep 3
/usr/sbin/service htpcmanager start
echo ""
echo "Mylar:"
cd /opt/Mylar
git pull
/usr/sbin/service mylar restart
echo ""
echo "Plexpy:"
cd /opt/plexpy
git pull
/usr/sbin/service plexpy restart
echo ""
echo "SickRage:"
cd /opt/sickrage
git fetch --all
git reset --hard origin/master
git pull origin master
echo ""
echo "Letsencrypt:"
cd /opt/letsencrypt
git pull
echo ""
echo "AutoSub:"
cd /opt/autosub
git pull
/usr/sbin/service autosub restart
echo ""
echo "ComicReader:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/ComicReader.bundle
git pull
echo ""
echo "PlexRequestChannel:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/PlexRequestChannel.bundle
git pull
echo ""
echo "Sub-Zero:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/
rm -rf Sub-Zero.bundle
git clone https://github.com/pannal/Sub-Zero.bundle
/usr/sbin/service plexmediaserver restart
echo ""
echo "WebTools:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/WebTools.bundle
git pull
echo ""
echo "Groovy:"
cd /opt/groovy
git pull
echo ""
echo "NZBhydra:"
cd /opt/nzbhydra
git pull
echo ""
echo "Cleanup:"
rm /usr/share/nginx/html/setup/setup.sh 2> /dev/null
echo ""
echo "Network Hang fix:"
nwadapter=$(/sbin/ifconfig -a | sed -n 's/^\([^ ]\+\).*/\1/p' | grep -Fvx -e lo -e dummy0)
/sbin/ethtool -K $nwadapter gso off gro off tso off
echo ""
echo "Chat random username:"
RUUID=$(uuidgen)
sed -i 's/nick: "OpenFLIXR.*/nick: "OpenFLIXR_'$RUUID'",/' /home/openflixr/.lounge/config.js
sed -i 's/username: "OpenFLIXR.*/username: "OpenFLIXR_'$RUUID'",/' /home/openflixr/.lounge/config.js
sed -i 's/realname: "OpenFLIXR.*/realname: "OpenFLIXR_'$RUUID'",/' /home/openflixr/.lounge/config.js
service lounge restart

## User script
bash /opt/openflixr/userscript.sh
